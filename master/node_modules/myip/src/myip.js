'use strict';

var http = require('http'),
  httpConfig = require('./http-config');

function queryService(callback) {
  var chunks = [];
  http.request(httpConfig, function (res) {
    res.on('data', function (d) {
      chunks.push(d);
    });
    res.on('end', function () {
      callback(null, chunks.join(''));
    });
  }).on('error', function (e) {
    callback(e);
  }).end();
}

var cachedIP = '';
var cachedAt = 0;
// 5 mins in ms
// see: http://whatismyipaddress.com/api
var CACHE_TTL = (5 * 60 * 1000);

function isCacheExpired() {
  return cachedAt === 0 ||
    (Date.now() - CACHE_TTL >= cachedAt);
}

module.exports = function(forceRefresh, cb) {
  if (arguments.length === 1) {
    cb = arguments[0];
    forceRefresh = false;
  }
  var refresh = forceRefresh || isCacheExpired();
  if (!refresh) {
    return cb(null, cachedIP);
  }
  queryService(function (err, ip) {
    if (err) {
      return cb(err);
    }
    cachedIP = ip;
    cachedAt = Date.now();
    cb(null, ip);
  });
};